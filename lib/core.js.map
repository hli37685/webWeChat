{"version":3,"sources":["../src/core.js"],"names":["path","bl","_debug","FormData","mime","getCONF","Request","isStandardBrowserEnv","assert","getClientMsgId","getDeviceID","debug","WechatCore","constructor","data","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","COOKIE","user","botData","request","Cookie","Object","keys","forEach","key","assign","getUUID","Promise","resolve","then","method","url","API_jsLogin","res","window","QRLogin","eval","equal","code","catch","err","tips","checkLogin","params","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","login","fun","pm","headers","item","test","init","Date","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SKey","updateSyncKey","User","notifyMobile","to","pass_ticket","lang","API_webwxstatusnotify","getContact","seq","API_webwxgetcontact","batchGetContact","contacts","length","API_webwxbatchgetcontact","ContactList","statReport","text","JSON","stringify","API_webwxreport","syncCheck","API_synccheck","synccheck","ex","retcode","selector","SYNCCHECK_RET_SUCCESS","sync","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","logout","redirect","type","API_webwxlogout","sendText","msg","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","sendEmoticon","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","uploadMedia","file","filename","toUserName","name","size","ext","mediatype","reject","File","Blob","Buffer","isBuffer","Error","lookup","readable","basename","pipe","buffer","toLowerCase","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","append","toGMTString","encodeURI","contentType","knownLength","getHeaders","f","API_webwxuploadmedia","mediaId","ok","sendPic","MSGTYPE_IMAGE","API_webwxsendmsgimg","sendVideo","MSGTYPE_VIDEO","API_webwxsendmsgvedio","sendDoc","APPMSGTYPE_ATTACH","API_webwxsendappmsg","forwardMsg","MsgType","Content","replace","SubMsgType","MSGTYPE_LOCATION","Type","OriContent","EmojiFlag","Scene","MSGTYPE_MICROVIDEO","MSGTYPE_APP","AppMsgType","getMsgImg","msgId","MsgID","API_webwxgetmsgimg","responseType","getVideo","API_webwxgetvideo","getVoice","API_webwxgetvoice","getHeadImg","HeadImgUrl","origin","getDoc","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","verifyUser","Ticket","API_webwxverifyuser","addFriend","content","NickName","createChatroom","Topic","MemberList","MemberCount","API_webwxcreatechatroom","updateChatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","opLog","OP","RemarkName","CmdId","API_webwxoplog","updateRemarkName","updateChatRoomName","NewName","NewTopic","console","log","revokeMsg","SvrMsgId","ClientMsgId","API_webwxrevokemsg","Uin","parseInt","Sid","Skey","DeviceID"],"mappings":"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","file":"core.js","sourcesContent":["import path from 'path'\r\nimport bl from 'bl'\r\nimport _debug from 'debug'\r\nimport FormData from 'form-data'\r\nimport mime from 'mime'\r\nimport {\r\n  getCONF,\r\n  Request,\r\n  isStandardBrowserEnv,\r\n  assert,\r\n  getClientMsgId,\r\n  getDeviceID\r\n} from './util'\r\n\r\nconst debug = _debug('core')\r\n\r\nexport default class WechatCore {\r\n\r\n  constructor (data) {\r\n    this.PROP = {\r\n      uuid: '',\r\n      uin: '',\r\n      sid: '',\r\n      skey: '',\r\n      passTicket: '',\r\n      formatedSyncKey: '',\r\n      webwxDataTicket: '',\r\n      syncKey: {\r\n        List: []\r\n      }\r\n    }\r\n    this.CONF = getCONF()\r\n    this.COOKIE = {}\r\n    this.user = {}\r\n    if (data) {\r\n      this.botData = data\r\n    }\r\n\r\n    this.request = new Request({\r\n      Cookie: this.COOKIE\r\n    })\r\n  }\r\n\r\n  get botData () {\r\n    return {\r\n      PROP: this.PROP,\r\n      CONF: this.CONF,\r\n      COOKIE: this.COOKIE,\r\n      user: this.user\r\n    }\r\n  }\r\n\r\n  set botData (data) {\r\n    Object.keys(data).forEach(key => {\r\n      Object.assign(this[key], data[key])\r\n    })\r\n  }\r\n\r\n  getUUID () {\r\n    return Promise.resolve().then(() => {\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_jsLogin\r\n      }).then(res => {\r\n        let window = {\r\n          QRLogin: {}\r\n        }\r\n        // res.data: \"window.QRLogin.code = xxx; ...\"\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n        assert.equal(window.QRLogin.code, 200, res)\r\n\r\n        this.PROP.uuid = window.QRLogin.uuid\r\n        return window.QRLogin.uuid\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取UUID失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  checkLogin () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'tip': 0,\r\n        'uuid': this.PROP.uuid,\r\n        'loginicon': true\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_login,\r\n        params: params\r\n      }).then(res => {\r\n        let window = {}\r\n\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n        assert.notEqual(window.code, 400, res)\r\n\r\n        if (window.code === 200) {\r\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\r\n          this.rediUri = window.redirect_uri\r\n        } else if (window.code === 201 && window.userAvatar) {\r\n          // this.user.userAvatar = window.userAvatar\r\n        }\r\n        return window\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取手机确认登录信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  login () {\r\n    return Promise.resolve().then(() => {\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.rediUri,\r\n        params: {\r\n          fun: 'new'\r\n        }\r\n      }).then(res => {\r\n        let pm = res.data.match(/<ret>(.*)<\\/ret>/)\r\n        if (pm && pm[1] === '0') {\r\n          this.PROP.skey = res.data.match(/<skey>(.*)<\\/skey>/)[1]\r\n          this.PROP.sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\r\n          this.PROP.uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\r\n          this.PROP.passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\r\n        }\r\n        if (res.headers['set-cookie']) {\r\n          res.headers['set-cookie'].forEach(item => {\r\n            if (/webwx.*?data.*?ticket/i.test(item)) {\r\n              this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\r\n            } else if (/wxuin/i.test(item)) {\r\n              this.PROP.uin = item.match(/=(.*?);/)[1]\r\n            } else if (/wxsid/i.test(item)) {\r\n              this.PROP.sid = item.match(/=(.*?);/)[1]\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '登录失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  init () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'skey': this.PROP.skey,\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxinit,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        this.PROP.skey = data.SKey || this.PROP.skey\r\n        this.updateSyncKey(data)\r\n        Object.assign(this.user, data.User)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '微信初始化失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  notifyMobile (to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket,\r\n        lang: 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Code': to ? 1 : 3,\r\n        'FromUserName': this.user['UserName'],\r\n        'ToUserName': to || this.user['UserName'],\r\n        'ClientMsgId': getClientMsgId()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxstatusnotify,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '手机状态通知失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getContact (seq = 0) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'lang': 'zh_CN',\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'seq': seq,\r\n        'skey': this.PROP.skey,\r\n        'r': +new Date()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxgetcontact,\r\n        params: params\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取通讯录失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  batchGetContact (contacts) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'type': 'ex',\r\n        'r': +new Date(),\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Count': contacts.length,\r\n        'List': contacts\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxbatchgetcontact,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        return data.ContactList\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '批量获取联系人失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  statReport (text) {\r\n    return Promise.resolve().then(() => {\r\n      text = text || {\r\n        'type': '[action-record]',\r\n        'data': {\r\n          'actions': [{\r\n            'type': 'click',\r\n            'action': '发送框',\r\n            'time': +new Date()\r\n          }]\r\n        }\r\n      }\r\n      text = JSON.stringify(text)\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'new',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Count': 1,\r\n        'List': [{\r\n          'Text': text,\r\n          'Type': 1\r\n        }]\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxreport,\r\n        params: params,\r\n        data: data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '状态报告失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  syncCheck () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'r': +new Date(),\r\n        'sid': this.PROP.sid,\r\n        'uin': this.PROP.uin,\r\n        'skey': this.PROP.skey,\r\n        'deviceid': getDeviceID(),\r\n        'synckey': this.PROP.formatedSyncKey\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_synccheck,\r\n        params: params\r\n      }).then(res => {\r\n        let window = {\r\n          synccheck: {}\r\n        }\r\n\r\n        try {\r\n          // eslint-disable-next-line\r\n          eval(res.data)\r\n        } catch (ex) {\r\n          window.synccheck = {retcode: '0', selector: '0'}\r\n        }\r\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\r\n\r\n        return window.synccheck.selector\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '同步失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sync () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'sid': this.PROP.sid,\r\n        'skey': this.PROP.skey,\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'SyncKey': this.PROP.syncKey,\r\n        'rr': ~new Date()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsync,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        this.updateSyncKey(data)\r\n        this.PROP.skey = data.SKey || this.PROP.skey\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取新信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateSyncKey (data) {\r\n    if (data.SyncKey) {\r\n      this.PROP.syncKey = data.SyncKey\r\n    }\r\n    if (data.SyncCheckKey) {\r\n      let synckeylist = []\r\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\r\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\r\n      }\r\n      this.PROP.formatedSyncKey = synckeylist.join('|')\r\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\r\n      let synckeylist = []\r\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\r\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\r\n      }\r\n      this.PROP.formatedSyncKey = synckeylist.join('|')\r\n    }\r\n  }\r\n\r\n  logout () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        redirect: 1,\r\n        type: 0,\r\n        skey: this.PROP.skey,\r\n        lang: 'zh_CN'\r\n      }\r\n\r\n      // data加上会出错，不加data也能登出\r\n      // let data = {\r\n      //   sid: this.PROP.sid,\r\n      //   uin: this.PROP.uin\r\n      // }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxlogout,\r\n        params: params\r\n      }).then(res => {\r\n        return '登出成功'\r\n      }).catch(err => {\r\n        debug(err)\r\n        return '可能登出成功'\r\n      })\r\n    })\r\n  }\r\n\r\n  sendText (msg, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_TEXT,\r\n          'Content': msg,\r\n          'FromUserName': this.user['UserName'],\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送文本信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendEmoticon (id, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'fun': 'sys',\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_EMOTICON,\r\n          'EmojiFlag': 2,\r\n          'FromUserName': this.user['UserName'],\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n\r\n      if (id.indexOf('@') === 0) {\r\n        data.Msg.MediaId = id\r\n      } else {\r\n        data.Msg.EMoticonMd5 = id\r\n      }\r\n\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendemoticon,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送表情信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // file: Stream, Buffer, File, Blob\r\n  uploadMedia (file, filename, toUserName) {\r\n    return Promise.resolve().then(() => {\r\n      let name, type, size, ext, mediatype, data\r\n      return new Promise((resolve, reject) => {\r\n        if ((typeof (File) !== 'undefined' && file.constructor == File) ||\r\n          (typeof (Blob) !== 'undefined' && file.constructor == Blob)) {\r\n          name = file.name || 'file'\r\n          type = file.type\r\n          size = file.size\r\n          data = file\r\n          return resolve()\r\n        } else if (Buffer.isBuffer(file)) {\r\n          if (!filename) {\r\n            return reject(new Error('文件名未知'))\r\n          }\r\n          name = filename\r\n          type = mime.lookup(name)\r\n          size = file.length\r\n          data = file\r\n          return resolve()\r\n        } else if (file.readable) {\r\n          if (!file.path && !filename) {\r\n            return reject(new Error('文件名未知'))\r\n          }\r\n          name = path.basename(file.path || filename)\r\n          type = mime.lookup(name)\r\n          file.pipe(bl((err, buffer) => {\r\n            if (err) {\r\n              return reject(err)\r\n            }\r\n            size = buffer.length\r\n            data = buffer\r\n            return resolve()\r\n          }))\r\n        }\r\n      }).then(() => {\r\n        ext = name.match(/.*\\.(.*)/)\r\n        if (ext) {\r\n          ext = ext[1].toLowerCase()\r\n        } else {\r\n          ext = ''\r\n        }\r\n\r\n        switch (ext) {\r\n          case 'bmp':\r\n          case 'jpeg':\r\n          case 'jpg':\r\n          case 'png':\r\n            mediatype = 'pic'\r\n            break\r\n          case 'mp4':\r\n            mediatype = 'video'\r\n            break\r\n          default:\r\n            mediatype = 'doc'\r\n        }\r\n\r\n        let clientMsgId = getClientMsgId()\r\n\r\n        let uploadMediaRequest = JSON.stringify({\r\n          BaseRequest: this.getBaseRequest(),\r\n          ClientMediaId: clientMsgId,\r\n          TotalLen: size,\r\n          StartPos: 0,\r\n          DataLen: size,\r\n          MediaType: 4,\r\n          UploadType: 2,\r\n          FromUserName: this.user.UserName,\r\n          ToUserName: toUserName || this.user.UserName\r\n        })\r\n\r\n        let form = new FormData()\r\n        form.append('name', name)\r\n        form.append('type', type)\r\n        form.append('lastModifiedDate', new Date().toGMTString())\r\n        form.append('size', size)\r\n        form.append('mediatype', mediatype)\r\n        form.append('uploadmediarequest', uploadMediaRequest)\r\n        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\r\n        form.append('pass_ticket', encodeURI(this.PROP.passTicket))\r\n        form.append('filename', data, {\r\n          filename: name,\r\n          contentType: type,\r\n          knownLength: size\r\n        })\r\n        return new Promise((resolve, reject) => {\r\n          if (isStandardBrowserEnv) {\r\n            return resolve({\r\n              data: form,\r\n              headers: {}\r\n            })\r\n          } else {\r\n            form.pipe(bl((err, buffer) => {\r\n              if (err) {\r\n                return reject(err)\r\n              }\r\n              return resolve({\r\n                data: buffer,\r\n                headers: form.getHeaders()\r\n              })\r\n            }))\r\n          }\r\n        })\r\n      }).then(data => {\r\n        let params = {\r\n          f: 'json'\r\n        }\r\n\r\n        return this.request({\r\n          method: 'POST',\r\n          url: this.CONF.API_webwxuploadmedia,\r\n          headers: data.headers,\r\n          params: params,\r\n          data: data.data\r\n        })\r\n      }).then(res => {\r\n        let data = res.data\r\n        let mediaId = data.MediaId\r\n        assert.ok(mediaId, res)\r\n\r\n        return {\r\n          name: name,\r\n          size: size,\r\n          ext: ext,\r\n          mediatype: mediatype,\r\n          mediaId: mediaId\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '上传媒体文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendPic (mediaId, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_IMAGE,\r\n          'MediaId': mediaId,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsgimg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送图片失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendVideo (mediaId, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_VIDEO,\r\n          'MediaId': mediaId,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsgvedio,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送视频失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendDoc (mediaId, name, size, ext, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\r\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendappmsg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  forwardMsg (msg, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 2,\r\n        'Msg': {\r\n          'Type': msg.MsgType,\r\n          'MediaId': '',\r\n          'Content': msg.Content.replace(/&lt;/g, '<').replace(/&gt;/g, '>'),\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      let url, pm\r\n      switch (msg.MsgType) {\r\n        case this.CONF.MSGTYPE_TEXT:\r\n          url = this.CONF.API_webwxsendmsg\r\n          if (msg.SubMsgType === this.CONF.MSGTYPE_LOCATION) {\r\n            data.Msg.Type = this.CONF.MSGTYPE_LOCATION\r\n            data.Msg.Content = msg.OriContent.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\r\n          }\r\n          break\r\n        case this.CONF.MSGTYPE_IMAGE:\r\n          url = this.CONF.API_webwxsendmsgimg\r\n          break\r\n        case this.CONF.MSGTYPE_EMOTICON:\r\n          url = this.CONF.API_webwxsendemoticon\r\n          params.fun = 'sys'\r\n          data.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, '$1')\r\n          if (!data.Msg.EMoticonMd5) {\r\n            throw new Error('商店表情不能转发')\r\n          }\r\n          data.Msg.EmojiFlag = 2\r\n          data.Scene = 0\r\n          delete data.Msg.MediaId\r\n          delete data.Msg.Content\r\n          break\r\n        case this.CONF.MSGTYPE_MICROVIDEO:\r\n        case this.CONF.MSGTYPE_VIDEO:\r\n          url = this.CONF.API_webwxsendmsgvedio\r\n          data.Msg.Type = this.CONF.MSGTYPE_VIDEO\r\n          break\r\n        case this.CONF.MSGTYPE_APP:\r\n          url = this.CONF.API_webwxsendappmsg\r\n          data.Msg.Type = msg.AppMsgType\r\n          data.Msg.Content = data.Msg.Content.replace(\r\n            /^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\r\n            `$1${msg.MediaId}$2`)\r\n          break\r\n        default:\r\n          throw new Error('该消息类型不能直接转发')\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: url,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '转发消息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getMsgImg (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey,\r\n        type: 'big'\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetmsgimg,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取图片或表情失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getVideo (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetvideo,\r\n        headers: {\r\n          'Range': 'bytes=0-'\r\n        },\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取视频失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getVoice (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetvoice,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取声音失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getHeadImg (HeadImgUrl) {\r\n    return Promise.resolve().then(() => {\r\n      let url = this.CONF.origin + HeadImgUrl\r\n      return this.request({\r\n        method: 'GET',\r\n        url: url,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取头像失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getDoc (FromUserName, MediaId, FileName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        sender: FromUserName,\r\n        mediaid: MediaId,\r\n        filename: FileName,\r\n        fromuser: this.user.UserName,\r\n        pass_ticket: this.PROP.passTicket,\r\n        webwx_data_ticket: this.PROP.webwxDataTicket\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxdownloadmedia,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取文件失败'\r\n      throw err;\r\n    })\r\n  }\r\n\r\n  verifyUser (UserName, Ticket) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Opcode': 3,\r\n        'VerifyUserListSize': 1,\r\n        'VerifyUserList': [{\r\n          'Value': UserName,\r\n          'VerifyUserTicket': Ticket\r\n        }],\r\n        'VerifyContent': '',\r\n        'SceneListCount': 1,\r\n        'SceneList': [33],\r\n        'skey': this.PROP.skey\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxverifyuser,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '通过好友请求失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n    /**\r\n     * 添加好友\r\n     * @param UserName 待添加用户的UserName\r\n     * @param content\r\n     * @returns {Promise.<TResult>}\r\n     */\r\n  addFriend (UserName, content = '我是' + this.user.NickName) {\r\n    let params = {\r\n      'pass_ticket': this.PROP.passTicket,\r\n      'lang': 'zh_CN'\r\n    }\r\n\r\n    let data = {\r\n      'BaseRequest': this.getBaseRequest(),\r\n      'Opcode': 2,\r\n      'VerifyUserListSize': 1,\r\n      'VerifyUserList': [{\r\n        'Value': UserName,\r\n        'VerifyUserTicket': ''\r\n      }],\r\n      'VerifyContent': content,\r\n      'SceneListCount': 1,\r\n      'SceneList': [33],\r\n      'skey': this.PROP.skey\r\n    }\r\n\r\n    return this.request({\r\n      method: 'POST',\r\n      url: this.CONF.API_webwxverifyuser,\r\n      params: params,\r\n      data: data\r\n    }).then(res => {\r\n      let data = res.data\r\n      assert.equal(data.BaseResponse.Ret, 0, res)\r\n      return data\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '添加好友失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // Topic: Chatroom name\r\n  // MemberList format:\r\n  // [\r\n  //   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\r\n  //   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\r\n  // ]\r\n  createChatroom (Topic, MemberList) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN',\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        MemberCount: MemberList.length,\r\n        MemberList: MemberList,\r\n        Topic: Topic\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxcreatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '创建群失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // fun: 'addmember' or 'delmember' or 'invitemember'\r\n  updateChatroom (ChatRoomUserName, MemberList, fun) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        fun: fun\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        ChatRoomName: ChatRoomUserName\r\n      }\r\n      if (fun === 'addmember') {\r\n        data.AddMemberList = MemberList.toString()\r\n      } else if (fun === 'delmember') {\r\n        data.DelMemberList = MemberList.toString()\r\n      } else if (fun === 'invitemember') {\r\n        data.InviteMemberList = MemberList.toString()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxupdatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '邀请或踢出群成员失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // OP: 1 联系人置顶 0 取消置顶\r\n  // 若不传RemarkName，则会覆盖以设置的联系人备注名\r\n  opLog (UserName, OP, RemarkName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        CmdId: 3,\r\n        OP: OP,\r\n        RemarkName: RemarkName,\r\n        UserName: UserName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxoplog,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '置顶或取消置顶失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateRemarkName (UserName, RemarkName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        CmdId: 2,\r\n        RemarkName: RemarkName,\r\n        UserName: UserName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxoplog,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '设置用户标签失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateChatRoomName (ChatRoomUserName, NewName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'fun': 'modtopic'\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        ChatRoomName: ChatRoomUserName,\r\n        NewTopic: NewName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxupdatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        console.log(JSON.stringify(res))\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      throw new Error('更新群名失败')\r\n    })\r\n  }\r\n\r\n  revokeMsg (msgId, toUserName) {\r\n    return Promise.resolve().then(() => {\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        SvrMsgId: msgId,\r\n        ToUserName: toUserName,\r\n        ClientMsgId: getClientMsgId()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxrevokemsg,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      throw new Error('撤回消息失败')\r\n    })\r\n  }\r\n\r\n  getBaseRequest () {\r\n    return {\r\n      Uin: parseInt(this.PROP.uin),\r\n      Sid: this.PROP.sid,\r\n      Skey: this.PROP.skey,\r\n      DeviceID: getDeviceID()\r\n    }\r\n  }\r\n}\r\n"]}