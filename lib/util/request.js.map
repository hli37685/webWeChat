{"version":3,"sources":["../../src/util/request.js"],"names":["axios","isStandardBrowserEnv","getPgv","c","Math","round","random","Date","Request","defaults","headers","timeout","httpAgent","httpsAgent","create","Cookie","interceptors","request","use","config","Object","keys","map","key","join","err","Promise","reject","response","res","setCookie","forEach","item","pm","match","options"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,QAAmC,UAAnC;;AAEA,MAAMC,SAASC,KAAK;AAClB,SAAO,CAACA,KAAK,EAAN,IAAYC,KAAKC,KAAL,CAAW,cAAcD,KAAKE,MAAL,MAAiB,GAA/B,CAAX,KAAmD,CAAC,IAAIC,IAAJ,EAAD,GAAc,IAAjE,CAAnB;AACD,CAFD;;AAIA,OAAO,SAASC,OAAT,CAAkBC,QAAlB,EAA4B;AACjCA,aAAWA,YAAY,EAAvB;AACAA,WAASC,OAAT,GAAmBD,SAASC,OAAT,IAAoB,EAAvC;AACA,MAAI,CAACT,oBAAL,EAA2B;AACzBQ,aAASC,OAAT,CAAiB,YAAjB,IAAiCD,SAASC,OAAT,CAAiB,YAAjB,KAAkC,2HAAnE;AACAD,aAASC,OAAT,CAAiB,YAAjB,IAAiCD,SAASC,OAAT,CAAiB,YAAjB,KAAkC,OAAnE;AACD;;AAEDD,WAASE,OAAT,GAAmB,OAAO,EAA1B;AACAF,WAASG,SAAT,GAAqB,KAArB;AACAH,WAASI,UAAT,GAAsB,KAAtB;;AAEA,OAAKb,KAAL,GAAaA,MAAMc,MAAN,CAAaL,QAAb,CAAb;AACA,MAAI,CAACR,oBAAL,EAA2B;AACzB,SAAKc,MAAL,GAAcN,SAASM,MAAT,IAAmB,EAAjC;AACA,SAAKA,MAAL,CAAY,SAAZ,IAAyBb,QAAzB;AACA,SAAKa,MAAL,CAAY,QAAZ,IAAwBb,OAAO,GAAP,CAAxB;AACA,SAAKF,KAAL,CAAWgB,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoCC,UAAU;AAC5CA,aAAOT,OAAP,CAAe,QAAf,IAA2BU,OAAOC,IAAP,CAAY,KAAKN,MAAjB,EAAyBO,GAAzB,CAA6BC,OAAO;AAC7D,eAAQ,GAAEA,GAAI,IAAG,KAAKR,MAAL,CAAYQ,GAAZ,CAAiB,EAAlC;AACD,OAF0B,EAExBC,IAFwB,CAEnB,IAFmB,CAA3B;AAGA,aAAOL,MAAP;AACD,KALD,EAKGM,OAAO;AACR,aAAOC,QAAQC,MAAR,CAAeF,GAAf,CAAP;AACD,KAPD;AAQA,SAAKzB,KAAL,CAAWgB,YAAX,CAAwBY,QAAxB,CAAiCV,GAAjC,CAAqCW,OAAO;AAC1C,UAAIC,YAAYD,IAAInB,OAAJ,CAAY,YAAZ,CAAhB;AACA,UAAIoB,SAAJ,EAAe;AACbA,kBAAUC,OAAV,CAAkBC,QAAQ;AACxB,cAAIC,KAAKD,KAAKE,KAAL,CAAW,sBAAX,CAAT;AACA,cAAID,EAAJ,EAAQ;AACN,iBAAKlB,MAAL,CAAYkB,GAAG,CAAH,CAAZ,IAAqBA,GAAG,CAAH,CAArB;AACD;AACF,SALD;AAMD;AACD,aAAOJ,GAAP;AACD,KAXD,EAWGJ,OAAO;AACR,UAAIA,OAAOA,IAAIG,QAAf,EAAyB;AACvB,eAAOH,IAAIG,QAAJ,CAAaX,OAApB;AACA,eAAOQ,IAAIG,QAAJ,CAAaT,MAApB;AACD;AACD,aAAOO,QAAQC,MAAR,CAAeF,GAAf,CAAP;AACD,KAjBD;AAkBD;;AAED,OAAKR,OAAL,GAAekB,WAAW;AACxB,WAAO,KAAKnC,KAAL,CAAWiB,OAAX,CAAmBkB,OAAnB,CAAP;AACD,GAFD;;AAIA,SAAO,KAAKlB,OAAZ;AACD","file":"request.js","sourcesContent":["import axios from 'axios'\nimport {isStandardBrowserEnv} from './global'\n\nconst getPgv = c => {\n  return (c || '') + Math.round(2147483647 * (Math.random() || 0.5)) * (+new Date() % 1E10)\n}\n\nexport function Request (defaults) {\n  defaults = defaults || {}\n  defaults.headers = defaults.headers || {}\n  if (!isStandardBrowserEnv) {\n    defaults.headers['user-agent'] = defaults.headers['user-agent'] || 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36'\n    defaults.headers['connection'] = defaults.headers['connection'] || 'close'\n  }\n\n  defaults.timeout = 1000 * 60\n  defaults.httpAgent = false\n  defaults.httpsAgent = false\n\n  this.axios = axios.create(defaults)\n  if (!isStandardBrowserEnv) {\n    this.Cookie = defaults.Cookie || {}\n    this.Cookie['pgv_pvi'] = getPgv()\n    this.Cookie['pgv_si'] = getPgv('s')\n    this.axios.interceptors.request.use(config => {\n      config.headers['cookie'] = Object.keys(this.Cookie).map(key => {\n        return `${key}=${this.Cookie[key]}`\n      }).join('; ')\n      return config\n    }, err => {\n      return Promise.reject(err)\n    })\n    this.axios.interceptors.response.use(res => {\n      let setCookie = res.headers['set-cookie']\n      if (setCookie) {\n        setCookie.forEach(item => {\n          let pm = item.match(/^(.+?)\\s?\\=\\s?(.+?);/)\n          if (pm) {\n            this.Cookie[pm[1]] = pm[2]\n          }\n        })\n      }\n      return res\n    }, err => {\n      if (err && err.response) {\n        delete err.response.request\n        delete err.response.config\n      }\n      return Promise.reject(err)\n    })\n  }\n\n  this.request = options => {\n    return this.axios.request(options)\n  }\n\n  return this.request\n}\n"]}