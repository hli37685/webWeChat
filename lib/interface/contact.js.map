{"version":3,"sources":["../../src/interface/contact.js"],"names":["convertEmoji","getCONF","CONF","getUserByUserName","memberList","UserName","length","find","contact","getDisplayName","isRoomContact","MemberCount","RemarkName","DisplayName","NickName","MemberList","test","isSpContact","SPECIALUSERS","indexOf","isPublicContact","VerifyFlag","MM_USERATTRVERIFYFALG_BIZ_BRAND","contactProto","init","instance","OriginalNickName","OrignalNickName","OriginalRemarkName","OrignalRemarkName","OriginalDisplayName","OrignalDisplayName","isSelf","user","canSearch","keyword","toUpperCase","isSatisfy","key","RemarkPYQuanPin","PYQuanPin","Alias","KeyWord","ContactFactory","extend","contactObj","Object","setPrototypeOf","contacts","getSearchUser","users","push"],"mappings":"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","file":"contact.js","sourcesContent":["import {\n  convertEmoji,\n  getCONF\n} from '../util'\nconst CONF = getCONF()\n\n/* Contact Object Example\n{\n  \"Uin\": 0,\n  \"UserName\": \"\",\n  \"NickName\": \"\",\n  \"HeadImgUrl\": \"\",\n  \"ContactFlag\": 3,\n  \"MemberCount\": 0,\n  \"MemberList\": [],\n  \"RemarkName\": \"\",\n  \"HideInputBarFlag\": 0,\n  \"Sex\": 0,\n  \"Signature\": \"\",\n  \"VerifyFlag\": 8,\n  \"OwnerUin\": 0,\n  \"PYInitial\": \"\",\n  \"PYQuanPin\": \"\",\n  \"RemarkPYInitial\": \"\",\n  \"RemarkPYQuanPin\": \"\",\n  \"StarFriend\": 0,\n  \"AppAccountFlag\": 0,\n  \"Statues\": 0,\n  \"AttrStatus\": 0,\n  \"Province\": \"\",\n  \"City\": \"\",\n  \"Alias\": \"Urinxs\",\n  \"SnsFlag\": 0,\n  \"UniFriend\": 0,\n  \"DisplayName\": \"\",\n  \"ChatRoomId\": 0,\n  \"KeyWord\": \"gh_\",\n  \"EncryChatRoomId\": \"\"\n}\n*/\nexport function getUserByUserName (memberList, UserName) {\n  if (!memberList.length) return null\n\n  return memberList.find(contact => contact.UserName === UserName)\n}\n\nexport function getDisplayName (contact) {\n  if (isRoomContact(contact)) {\n    if (contact.MemberCount >= 2) {\n      return '[群] ' + (contact.RemarkName || contact.DisplayName || contact.NickName ||\n      `${getDisplayName(contact.MemberList[0])}、${getDisplayName(contact.MemberList[1])}`)\n    } else {\n      return '[群] ' + (contact.RemarkName || contact.DisplayName || contact.NickName ||\n        `${getDisplayName(contact.MemberList[0])}`)\n    }\n  } else {\n    return contact.DisplayName || contact.RemarkName || contact.NickName || contact.UserName\n  }\n}\n\nexport function isRoomContact (contact) {\n  return contact.UserName ? /^@@|@chatroom$/.test(contact.UserName) : false\n}\n\nexport function isSpContact (contact) {\n  return CONF.SPECIALUSERS.indexOf(contact.UserName) >= 0\n}\n\nexport function isPublicContact (contact) {\n  return contact.VerifyFlag & CONF.MM_USERATTRVERIFYFALG_BIZ_BRAND\n}\n\nconst contactProto = {\n  init: function (instance) {\n    // 纠正错误以后保持兼容\n    this.OriginalNickName = this.OrignalNickName = this.NickName\n    this.OriginalRemarkName = this.OrignalRemarkName = this.RemarkName\n    this.OriginalDisplayName = this.OrignalDisplayName = this.DisplayName\n    this.NickName = convertEmoji(this.NickName)\n    this.RemarkName = convertEmoji(this.RemarkName)\n    this.DisplayName = convertEmoji(this.DisplayName)\n    this.isSelf = this.UserName === instance.user.UserName\n\n    return this\n  },\n  getDisplayName: function () {\n    return getDisplayName(this)\n  },\n  canSearch: function (keyword) {\n    if (!keyword) return false\n    keyword = keyword.toUpperCase()\n\n    let isSatisfy = key => (key || '').toUpperCase().indexOf(keyword) >= 0\n    return (\n      isSatisfy(this.RemarkName) ||\n      isSatisfy(this.RemarkPYQuanPin) ||\n      isSatisfy(this.NickName) ||\n      isSatisfy(this.PYQuanPin) ||\n      isSatisfy(this.Alias) ||\n      isSatisfy(this.KeyWord)\n    )\n  }\n}\n\nexport default function ContactFactory (instance) {\n  return {\n    extend: function (contactObj) {\n      contactObj = Object.setPrototypeOf(contactObj, contactProto)\n      return contactObj.init(instance)\n    },\n    getUserByUserName: function (UserName) {\n      return instance.contacts[UserName]\n    },\n    getSearchUser: function (keyword) {\n      let users = []\n      for (let key in instance.contacts) {\n        if (instance.contacts[key].canSearch(keyword)) {\n          users.push(instance.contacts[key])\n        }\n      }\n      return users\n    },\n    isSelf: function (contact) {\n      return contact.isSelf || contact.UserName === instance.user.UserName\n    },\n    getDisplayName,\n    isRoomContact,\n    isPublicContact,\n    isSpContact\n  }\n}\n"]}