{"version":3,"sources":["../src/wechat.js"],"names":["WechatCore","EventEmitter","_","getCONF","isStandardBrowserEnv","ContactFactory","MessageFactory","_debug","debug","process","on","err","console","log","Wechat","constructor","data","extend","state","CONF","STATE","init","contacts","Contact","Message","lastSyncTime","syncPollingId","syncErrorCount","checkPollingId","retryPollingId","friendList","members","key","member","push","username","nickname","getDisplayName","py","avatar","AvatarUrl","sendMsg","msg","toUserName","sendText","emoticonMd5","sendEmoticon","uploadMedia","file","filename","then","res","ext","sendPic","mediaId","sendVideo","sendDoc","name","size","syncPolling","id","login","syncCheck","selector","SYNCCHECK_SELECTOR_NORMAL","sync","handleSync","Date","now","catch","emit","Error","clearTimeout","setTimeout","restart","_getContact","Seq","getContact","MemberList","_contacts","concat","emptyGroup","filter","contact","UserName","startsWith","MemberCount","length","batchGetContact","_init","updateContacts","ContactList","notifyMobile","checkPolling","_login","checkLogin","code","userAvatar","getUUID","uuid","redirect_uri","start","stop","response","Promise","resolve","logout","interval","_getPollingMessage","_getPollingTarget","_getPollingInterval","AddMsgCount","handleMsg","AddMsgList","ModContactCount","ModContactList","forEach","FromUserName","MsgType","MSGTYPE_STATUSNOTIFY","userList","StatusNotifyUserName","split","map","all","chunk","list","ToUserName","Content","test","oldContact","i","Object","assign","toLocaleString","setPollingMessageGetter","func","setPollingIntervalGetter","setPollingTargetGetter","exports","module"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,QAAvB;AACA,OAAOC,YAAP,MAAyB,QAAzB;;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SACEC,OADF,EAEEC,oBAFF,QAGO,QAHP;;AAKA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,OAAOC,MAAP,MAAmB,OAAnB;AACA,MAAMC,QAAQD,OAAO,QAAP,CAAd;;AAEA,IAAI,CAACH,oBAAL,EAA2B;AACzBK,UAAQC,EAAR,CAAW,mBAAX,EAAgCC,OAAO;AACrCC,YAAQC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACD,GAFD;AAGD;;AAED,MAAMG,MAAN,SAAqBd,UAArB,CAAgC;;AAE9Be,cAAaC,IAAb,EAAmB;AACjB,UAAMA,IAAN;AACAd,MAAEe,MAAF,CAAS,IAAT,EAAe,IAAIhB,YAAJ,EAAf;AACA,SAAKiB,KAAL,GAAa,KAAKC,IAAL,CAAUC,KAAV,CAAgBC,IAA7B;AACA,SAAKC,QAAL,GAAgB,EAAhB,CAJiB,CAIE;AACnB,SAAKC,OAAL,GAAelB,eAAe,IAAf,CAAf;AACA,SAAKmB,OAAL,GAAelB,eAAe,IAAf,CAAf;AACA,SAAKmB,YAAL,GAAoB,CAApB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACD;;AAED,MAAIC,UAAJ,GAAkB;AAChB,QAAIC,UAAU,EAAd;;AAEA,SAAK,IAAIC,GAAT,IAAgB,KAAKV,QAArB,EAA+B;AAC7B,UAAIW,SAAS,KAAKX,QAAL,CAAcU,GAAd,CAAb;AACAD,cAAQG,IAAR,CAAa;AACXC,kBAAUF,OAAO,UAAP,CADC;AAEXG,kBAAU,KAAKb,OAAL,CAAac,cAAb,CAA4BJ,MAA5B,CAFC;AAGXK,YAAIL,OAAO,iBAAP,IAA4BA,OAAO,iBAAP,CAA5B,GAAwDA,OAAO,WAAP,CAHjD;AAIXM,gBAAQN,OAAOO;AAJJ,OAAb;AAMD;;AAED,WAAOT,OAAP;AACD;;AAEDU,UAASC,GAAT,EAAcC,UAAd,EAA0B;AACxB,QAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAO,KAAKE,QAAL,CAAcF,GAAd,EAAmBC,UAAnB,CAAP;AACD,KAFD,MAEO,IAAID,IAAIG,WAAR,EAAqB;AAC1B,aAAO,KAAKC,YAAL,CAAkBJ,IAAIG,WAAtB,EAAmCF,UAAnC,CAAP;AACD,KAFM,MAEA;AACL,aAAO,KAAKI,WAAL,CAAiBL,IAAIM,IAArB,EAA2BN,IAAIO,QAA/B,EAAyCN,UAAzC,EACJO,IADI,CACCC,OAAO;AACX,gBAAQA,IAAIC,GAAZ;AACE,eAAK,KAAL;AACA,eAAK,MAAL;AACA,eAAK,KAAL;AACA,eAAK,KAAL;AACE,mBAAO,KAAKC,OAAL,CAAaF,IAAIG,OAAjB,EAA0BX,UAA1B,CAAP;AACF,eAAK,KAAL;AACE,mBAAO,KAAKG,YAAL,CAAkBK,IAAIG,OAAtB,EAA+BX,UAA/B,CAAP;AACF,eAAK,KAAL;AACE,mBAAO,KAAKY,SAAL,CAAeJ,IAAIG,OAAnB,EAA4BX,UAA5B,CAAP;AACF;AACE,mBAAO,KAAKa,OAAL,CAAaL,IAAIG,OAAjB,EAA0BH,IAAIM,IAA9B,EAAoCN,IAAIO,IAAxC,EAA8CP,IAAIC,GAAlD,EAAuDT,UAAvD,CAAP;AAXJ;AAaD,OAfI,CAAP;AAgBD;AACF;;AAEDgB,cAAaC,KAAK,EAAE,KAAKlC,aAAzB,EAAwC;AACtC,QAAI,KAAKR,KAAL,KAAe,KAAKC,IAAL,CAAUC,KAAV,CAAgByC,KAA/B,IAAwC,KAAKnC,aAAL,KAAuBkC,EAAnE,EAAuE;AACrE;AACD;AACD,SAAKE,SAAL,GAAiBZ,IAAjB,CAAsBa,YAAY;AAChCvD,YAAM,uBAAN,EAA+BuD,QAA/B;AACA,UAAI,CAACA,QAAD,KAAc,KAAK5C,IAAL,CAAU6C,yBAA5B,EAAuD;AACrD,eAAO,KAAKC,IAAL,GAAYf,IAAZ,CAAiBlC,QAAQ;AAC9B,eAAKW,cAAL,GAAsB,CAAtB;AACA,eAAKuC,UAAL,CAAgBlD,IAAhB;AACD,SAHM,CAAP;AAID;AACF,KARD,EAQGkC,IARH,CAQQ,MAAM;AACZ,WAAKzB,YAAL,GAAoB0C,KAAKC,GAAL,EAApB;AACA,WAAKT,WAAL,CAAiBC,EAAjB;AACD,KAXD,EAWGS,KAXH,CAWS1D,OAAO;AACd,UAAI,KAAKO,KAAL,KAAe,KAAKC,IAAL,CAAUC,KAAV,CAAgByC,KAAnC,EAA0C;AACxC;AACD;AACDrD,YAAMG,GAAN;AACA,WAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA,UAAI,EAAE,KAAKgB,cAAP,GAAwB,CAA5B,EAA+B;AAC7B,YAAIhB,MAAM,IAAI4D,KAAJ,CAAW,KAAI,KAAK5C,cAAe,eAAnC,CAAV;AACAnB,cAAMG,GAAN;AACA,aAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA6D,qBAAa,KAAK3C,cAAlB;AACA4C,mBAAW,MAAM,KAAKC,OAAL,EAAjB,EAAiC,IAAI,IAArC;AACD,OAND,MAMO;AACLF,qBAAa,KAAK3C,cAAlB;AACA,aAAKA,cAAL,GAAsB4C,WAAW,MAAM,KAAKd,WAAL,CAAiBC,EAAjB,CAAjB,EAAuC,OAAO,KAAKjC,cAAnD,CAAtB;AACD;AACF,KA3BD;AA4BD;;AAEDgD,cAAaC,MAAM,CAAnB,EAAsB;AACpB,QAAItD,WAAW,EAAf;AACA,WAAO,KAAKuD,UAAL,CAAgBD,GAAhB,EACN1B,IADM,CACDC,OAAO;AACX7B,iBAAW6B,IAAI2B,UAAJ,IAAkB,EAA7B;AACA,UAAI3B,IAAIyB,GAAR,EAAa;AACX,eAAO,KAAKD,WAAL,CAAiBxB,IAAIyB,GAArB,EACN1B,IADM,CACD6B,aAAazD,WAAWA,SAAS0D,MAAT,CAAgBD,aAAa,EAA7B,CADvB,CAAP;AAED;AACF,KAPM,EAQN7B,IARM,CAQD,MAAM;AACV,UAAI0B,OAAO,CAAX,EAAc;AACZ,YAAIK,aACF3D,SAAS4D,MAAT,CAAgBC,WAAWA,QAAQC,QAAR,CAAiBC,UAAjB,CAA4B,IAA5B,KAAqCF,QAAQG,WAAR,IAAuB,CAAvF,CADF;AAEA,YAAIL,WAAWM,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,iBAAO,KAAKC,eAAL,CAAqBP,UAArB,EACN/B,IADM,CACD6B,aAAazD,WAAWA,SAAS0D,MAAT,CAAgBD,aAAa,EAA7B,CADvB,CAAP;AAED,SAHD,MAGO;AACL,iBAAOzD,QAAP;AACD;AACF,OATD,MASO;AACL,eAAOA,QAAP;AACD;AACF,KArBM,EAsBN+C,KAtBM,CAsBA1D,OAAO;AACZ,WAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA,aAAOW,QAAP;AACD,KAzBM,CAAP;AA0BD;;AAEDmE,UAAS;AACP,WAAO,KAAKpE,IAAL,GACN6B,IADM,CACDlC,QAAQ;AACZ;AACA;AACA;AACA,WAAK0E,cAAL,CAAoB1E,KAAK2E,WAAzB;;AAEA,WAAKC,YAAL,GACCvB,KADD,CACO1D,OAAO,KAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB,CADd;AAEA,WAAKgE,WAAL,GACCzB,IADD,CACM5B,YAAY;AAChBd,cAAM,oBAAN,EAA4Bc,SAASiE,MAArC;AACA,aAAKG,cAAL,CAAoBpE,QAApB;AACD,OAJD;AAKA,WAAKJ,KAAL,GAAa,KAAKC,IAAL,CAAUC,KAAV,CAAgByC,KAA7B;AACA,WAAKpC,YAAL,GAAoB0C,KAAKC,GAAL,EAApB;AACA,WAAKT,WAAL;AACA,WAAKkC,YAAL;AACA,WAAKvB,IAAL,CAAU,OAAV;AACD,KAnBM,CAAP;AAoBD;;AAEDwB,WAAU;AACR,UAAMC,aAAa,MAAM;AACvB,aAAO,KAAKA,UAAL,GACJ7C,IADI,CACCC,OAAO;AACX,YAAIA,IAAI6C,IAAJ,KAAa,GAAb,IAAoB7C,IAAI8C,UAA5B,EAAwC;AACtC,eAAK3B,IAAL,CAAU,aAAV,EAAyBnB,IAAI8C,UAA7B;AACD;AACD,YAAI9C,IAAI6C,IAAJ,KAAa,GAAjB,EAAsB;AACpBxF,gBAAM,cAAN,EAAsB2C,IAAI6C,IAA1B;AACA,iBAAOD,YAAP;AACD,SAHD,MAGO;AACL,iBAAO5C,GAAP;AACD;AACF,OAXI,CAAP;AAYD,KAbD;AAcA,WAAO,KAAK+C,OAAL,GACJhD,IADI,CACCiD,QAAQ;AACZ3F,YAAM,WAAN,EAAmB2F,IAAnB;AACA,WAAK7B,IAAL,CAAU,MAAV,EAAkB6B,IAAlB;AACA,WAAKjF,KAAL,GAAa,KAAKC,IAAL,CAAUC,KAAV,CAAgB+E,IAA7B;AACA,aAAOJ,YAAP;AACD,KANI,EAOJ7C,IAPI,CAOCC,OAAO;AACX3C,YAAM,cAAN,EAAsB2C,IAAIiD,YAA1B;AACA,aAAO,KAAKvC,KAAL,EAAP;AACD,KAVI,CAAP;AAWD;;AAEDwC,UAAS;AACP7F,UAAM,QAAN;AACA,WAAO,KAAKsF,MAAL,GACJ5C,IADI,CACC,MAAM,KAAKuC,KAAL,EADP,EAEJpB,KAFI,CAEE1D,OAAO;AACZH,YAAMG,GAAN;AACA,WAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA,WAAK2F,IAAL;AACD,KANI,CAAP;AAOD;;AAED5B,YAAW;AACTlE,UAAM,QAAN;AACA,WAAO,KAAKiF,KAAL,GACJpB,KADI,CACE1D,OAAO;AACZ,UAAIA,IAAI4F,QAAR,EAAkB;AAChB,cAAM5F,GAAN;AACD,OAFD,MAEO;AACL,YAAIA,MAAM,IAAI4D,KAAJ,CAAU,sBAAV,CAAV;AACA/D,cAAMG,GAAN;AACA,aAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA,eAAO,IAAI6F,OAAJ,CAAYC,WAAW;AAC5BhC,qBAAWgC,OAAX,EAAoB,KAAK,IAAzB;AACD,SAFM,EAEJvD,IAFI,CAEC,MAAM,KAAK7B,IAAL,EAFP,EAGJ6B,IAHI,CAGClC,QAAQ;AACZ,eAAK0E,cAAL,CAAoB1E,KAAK2E,WAAzB;AACD,SALI,CAAP;AAMD;AACF,KAfI,EAeFtB,KAfE,CAeI1D,OAAO;AACdH,YAAMG,GAAN;AACA,WAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA,WAAK2F,IAAL;AACD,KAnBI,CAAP;AAoBD;;AAEDA,SAAQ;AACN9F,UAAM,QAAN;AACAgE,iBAAa,KAAK3C,cAAlB;AACA2C,iBAAa,KAAK5C,cAAlB;AACA,SAAK8E,MAAL;AACA,SAAKxF,KAAL,GAAa,KAAKC,IAAL,CAAUC,KAAV,CAAgBsF,MAA7B;AACA,SAAKpC,IAAL,CAAU,QAAV;AACD;;AAEDuB,iBAAgB;AACd,QAAI,KAAK3E,KAAL,KAAe,KAAKC,IAAL,CAAUC,KAAV,CAAgByC,KAAnC,EAA0C;AACxC;AACD;AACD,QAAI8C,WAAWxC,KAAKC,GAAL,KAAa,KAAK3C,YAAjC;AACA,QAAIkF,WAAW,IAAI,EAAJ,GAAS,IAAxB,EAA8B;AAC5B,UAAIhG,MAAM,IAAI4D,KAAJ,CAAW,SAAQoC,WAAW,IAAK,cAAnC,CAAV;AACAnG,YAAMG,GAAN;AACA,WAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACA6D,mBAAa,KAAK5C,cAAlB;AACA6C,iBAAW,MAAM,KAAKC,OAAL,EAAjB,EAAiC,IAAI,IAArC;AACD,KAND,MAMO;AACLlE,YAAM,IAAN;AACA,WAAKoF,YAAL,GACCvB,KADD,CACO1D,OAAO;AACZH,cAAMG,GAAN;AACA,aAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACD,OAJD;AAKA,WAAK8B,OAAL,CAAa,KAAKmE,kBAAL,EAAb,EAAwC,KAAKC,iBAAL,EAAxC,EACCxC,KADD,CACO1D,OAAO;AACZH,cAAMG,GAAN;AACA,aAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACD,OAJD;AAKA6D,mBAAa,KAAK5C,cAAlB;AACA,WAAKA,cAAL,GAAsB6C,WAAW,MAAM,KAAKoB,YAAL,EAAjB,EAAsC,KAAKiB,mBAAL,EAAtC,CAAtB;AACD;AACF;;AAED5C,aAAYlD,IAAZ,EAAkB;AAChB,QAAI,CAACA,IAAL,EAAW;AACT,WAAK0D,OAAL;AACA;AACD;AACD,QAAI1D,KAAK+F,WAAT,EAAsB;AACpBvG,YAAM,8BAAN,EAAsCQ,KAAK+F,WAA3C;AACA,WAAKC,SAAL,CAAehG,KAAKiG,UAApB;AACD;AACD,QAAIjG,KAAKkG,eAAT,EAA0B;AACxB1G,YAAM,oCAAN,EAA4CQ,KAAKkG,eAAjD;AACA,WAAKxB,cAAL,CAAoB1E,KAAKmG,cAAzB;AACD;AACF;;AAEDH,YAAWhG,IAAX,EAAiB;AACfA,SAAKoG,OAAL,CAAa1E,OAAO;AAClB8D,cAAQC,OAAR,GAAkBvD,IAAlB,CAAuB,MAAM;AAC3B,YAAI,CAAC,KAAK5B,QAAL,CAAcoB,IAAI2E,YAAlB,CAAD,IACD3E,IAAI2E,YAAJ,CAAiBhC,UAAjB,CAA4B,IAA5B,KAAqC,KAAK/D,QAAL,CAAcoB,IAAI2E,YAAlB,EAAgC/B,WAAhC,IAA+C,CADvF,EAC2F;AACzF,iBAAO,KAAKE,eAAL,CAAqB,CAAC;AAC3BJ,sBAAU1C,IAAI2E;AADa,WAAD,CAArB,EAEHnE,IAFG,CAEE5B,YAAY;AACnB,iBAAKoE,cAAL,CAAoBpE,QAApB;AACD,WAJM,EAIJ+C,KAJI,CAIE1D,OAAO;AACdH,kBAAMG,GAAN;AACA,iBAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACD,WAPM,CAAP;AAQD;AACF,OAZD,EAYGuC,IAZH,CAYQ,MAAM;AACZR,cAAM,KAAKlB,OAAL,CAAaP,MAAb,CAAoByB,GAApB,CAAN;AACA,aAAK4B,IAAL,CAAU,SAAV,EAAqB5B,GAArB;AACA,YAAIA,IAAI4E,OAAJ,KAAgB,KAAKnG,IAAL,CAAUoG,oBAA9B,EAAoD;AAClD,cAAIC,WAAW9E,IAAI+E,oBAAJ,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoCxC,MAApC,CAA2CE,YAAY,CAAC,KAAK9D,QAAL,CAAc8D,QAAd,CAAxD,EACduC,GADc,CACVvC,YAAY;AACf,mBAAO;AACLA,wBAAUA;AADL,aAAP;AAGD,WALc,CAAf;AAMAoB,kBAAQoB,GAAR,CAAY1H,EAAE2H,KAAF,CAAQL,QAAR,EAAkB,EAAlB,EAAsBG,GAAtB,CAA0BG,QAAQ;AAC5C,mBAAO,KAAKtC,eAAL,CAAqBsC,IAArB,EAA2B5E,IAA3B,CAAgCC,OAAO;AAC5C3C,oBAAM,+BAAN,EAAuC2C,IAAIoC,MAA3C;AACA,mBAAKG,cAAL,CAAoBvC,GAApB;AACD,aAHM,CAAP;AAID,WALW,CAAZ,EAKIkB,KALJ,CAKU1D,OAAO;AACfH,kBAAMG,GAAN;AACA,iBAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACD,WARD;AASD;AACD,YAAI+B,IAAIqF,UAAJ,KAAmB,YAAnB,IAAmCrF,IAAIsF,OAAJ,KAAgB,YAAnD,IACF,8BAA8BC,IAA9B,CAAmCvF,IAAIsF,OAAvC,CADF,EACmD;AACjD,eAAK1B,IAAL;AACD;AACF,OApCD,EAoCGjC,KApCH,CAoCS1D,OAAO;AACd,aAAK2D,IAAL,CAAU,OAAV,EAAmB3D,GAAnB;AACAH,cAAMG,GAAN;AACD,OAvCD;AAwCD,KAzCD;AA0CD;;AAED+E,iBAAgBpE,QAAhB,EAA0B;AACxB,QAAI,CAACA,QAAD,IAAaA,SAASiE,MAAT,IAAmB,CAApC,EAAuC;AACrC;AACD;AACDjE,aAAS8F,OAAT,CAAiBjC,WAAW;AAC1B,UAAI,KAAK7D,QAAL,CAAc6D,QAAQC,QAAtB,CAAJ,EAAqC;AACnC,YAAI8C,aAAa,KAAK5G,QAAL,CAAc6D,QAAQC,QAAtB,CAAjB;AACA;AACA,aAAK,IAAI+C,CAAT,IAAchD,OAAd,EAAuB;AACrBA,kBAAQgD,CAAR,KAAc,OAAOhD,QAAQgD,CAAR,CAArB;AACD;AACDC,eAAOC,MAAP,CAAcH,UAAd,EAA0B/C,OAA1B;AACA,aAAK5D,OAAL,CAAaN,MAAb,CAAoBiH,UAApB;AACD,OARD,MAQO;AACL,aAAK5G,QAAL,CAAc6D,QAAQC,QAAtB,IAAkC,KAAK7D,OAAL,CAAaN,MAAb,CAAoBkE,OAApB,CAAlC;AACD;AACF,KAZD;AAaA,SAAKb,IAAL,CAAU,kBAAV,EAA8BhD,QAA9B;AACD;;AAEDsF,uBAAsB;AAAE;AACtB,WAAO,QAAQ,IAAIzC,IAAJ,GAAWmE,cAAX,EAAf;AACD;;AAEDxB,wBAAuB;AAAE;AACvB,WAAO,IAAI,EAAJ,GAAS,IAAhB;AACD;;AAEDD,sBAAqB;AAAE;AACrB,WAAO,YAAP;AACD;;AAED0B,0BAAyBC,IAAzB,EAA+B;AAC7B,QAAI,OAAQA,IAAR,KAAkB,UAAtB,EAAkC;AAClC,QAAI,OAAQA,MAAR,KAAoB,QAAxB,EAAkC;AAClC,SAAK5B,kBAAL,GAA0B4B,IAA1B;AACD;;AAEDC,2BAA0BD,IAA1B,EAAgC;AAC9B,QAAI,OAAQA,IAAR,KAAkB,UAAtB,EAAkC;AAClC,QAAI,OAAQA,MAAR,KAAoB,QAAxB,EAAkC;AAClC,SAAK1B,mBAAL,GAA2B0B,IAA3B;AACD;;AAEDE,yBAAwBF,IAAxB,EAA8B;AAC5B,QAAI,OAAQA,IAAR,KAAkB,UAAtB,EAAkC;AAClC,QAAI,OAAQA,MAAR,KAAoB,QAAxB,EAAkC;AAClC,SAAK3B,iBAAL,GAAyB2B,IAAzB;AACD;;AAhW6B;;AAoWhC1H,OAAOM,KAAP,GAAejB,UAAUiB,KAAzB;;AAEAuH,UAAUC,OAAOD,OAAP,GAAiB7H,MAA3B","file":"wechat.js","sourcesContent":["import WechatCore from './core'\nimport EventEmitter from 'events'\n\nimport _ from 'lodash'\nimport {\n  getCONF,\n  isStandardBrowserEnv\n} from './util'\n\nimport ContactFactory from './interface/contact'\nimport MessageFactory from './interface/message'\n\nimport _debug from 'debug'\nconst debug = _debug('wechat')\n\nif (!isStandardBrowserEnv) {\n  process.on('uncaughtException', err => {\n    console.log('uncaughtException', err)\n  })\n}\n\nclass Wechat extends WechatCore {\n\n  constructor (data) {\n    super(data)\n    _.extend(this, new EventEmitter())\n    this.state = this.CONF.STATE.init\n    this.contacts = {} // 所有联系人\n    this.Contact = ContactFactory(this)\n    this.Message = MessageFactory(this)\n    this.lastSyncTime = 0\n    this.syncPollingId = 0\n    this.syncErrorCount = 0\n    this.checkPollingId = 0\n    this.retryPollingId = 0\n  }\n\n  get friendList () {\n    let members = []\n\n    for (let key in this.contacts) {\n      let member = this.contacts[key]\n      members.push({\n        username: member['UserName'],\n        nickname: this.Contact.getDisplayName(member),\n        py: member['RemarkPYQuanPin'] ? member['RemarkPYQuanPin'] : member['PYQuanPin'],\n        avatar: member.AvatarUrl\n      })\n    }\n\n    return members\n  }\n\n  sendMsg (msg, toUserName) {\n    if (typeof msg !== 'object') {\n      return this.sendText(msg, toUserName)\n    } else if (msg.emoticonMd5) {\n      return this.sendEmoticon(msg.emoticonMd5, toUserName)\n    } else {\n      return this.uploadMedia(msg.file, msg.filename, toUserName)\n        .then(res => {\n          switch (res.ext) {\n            case 'bmp':\n            case 'jpeg':\n            case 'jpg':\n            case 'png':\n              return this.sendPic(res.mediaId, toUserName)\n            case 'gif':\n              return this.sendEmoticon(res.mediaId, toUserName)\n            case 'mp4':\n              return this.sendVideo(res.mediaId, toUserName)\n            default:\n              return this.sendDoc(res.mediaId, res.name, res.size, res.ext, toUserName)\n          }\n        })\n    }\n  }\n\n  syncPolling (id = ++this.syncPollingId) {\n    if (this.state !== this.CONF.STATE.login || this.syncPollingId !== id) {\n      return\n    }\n    this.syncCheck().then(selector => {\n      debug('Sync Check Selector: ', selector)\n      if (+selector !== this.CONF.SYNCCHECK_SELECTOR_NORMAL) {\n        return this.sync().then(data => {\n          this.syncErrorCount = 0\n          this.handleSync(data)\n        })\n      }\n    }).then(() => {\n      this.lastSyncTime = Date.now()\n      this.syncPolling(id)\n    }).catch(err => {\n      if (this.state !== this.CONF.STATE.login) {\n        return\n      }\n      debug(err)\n      this.emit('error', err)\n      if (++this.syncErrorCount > 2) {\n        let err = new Error(`连续${this.syncErrorCount}次同步失败，5s后尝试重启`)\n        debug(err)\n        this.emit('error', err)\n        clearTimeout(this.retryPollingId)\n        setTimeout(() => this.restart(), 5 * 1000)\n      } else {\n        clearTimeout(this.retryPollingId)\n        this.retryPollingId = setTimeout(() => this.syncPolling(id), 2000 * this.syncErrorCount)\n      }\n    })\n  }\n\n  _getContact (Seq = 0) {\n    let contacts = []\n    return this.getContact(Seq)\n    .then(res => {\n      contacts = res.MemberList || []\n      if (res.Seq) {\n        return this._getContact(res.Seq)\n        .then(_contacts => contacts = contacts.concat(_contacts || []))\n      }\n    })\n    .then(() => {\n      if (Seq == 0) {\n        let emptyGroup =\n          contacts.filter(contact => contact.UserName.startsWith('@@') && contact.MemberCount == 0)\n        if (emptyGroup.length != 0) {\n          return this.batchGetContact(emptyGroup)\n          .then(_contacts => contacts = contacts.concat(_contacts || []))\n        } else {\n          return contacts\n        }\n      } else {\n        return contacts\n      }\n    })\n    .catch(err => {\n      this.emit('error', err)\n      return contacts\n    })\n  }\n\n  _init () {\n    return this.init()\n    .then(data => {\n      // this.getContact() 这个接口返回通讯录中的联系人（包括已保存的群聊）\n      // 临时的群聊会话在初始化的接口中可以获取，因此这里也需要更新一遍 contacts\n      // 否则后面可能会拿不到某个临时群聊的信息\n      this.updateContacts(data.ContactList)\n\n      this.notifyMobile()\n      .catch(err => this.emit('error', err))\n      this._getContact()\n      .then(contacts => {\n        debug('getContact count: ', contacts.length)\n        this.updateContacts(contacts)\n      })\n      this.state = this.CONF.STATE.login\n      this.lastSyncTime = Date.now()\n      this.syncPolling()\n      this.checkPolling()\n      this.emit('login')\n    })\n  }\n\n  _login () {\n    const checkLogin = () => {\n      return this.checkLogin()\n        .then(res => {\n          if (res.code === 201 && res.userAvatar) {\n            this.emit('user-avatar', res.userAvatar)\n          }\n          if (res.code !== 200) {\n            debug('checkLogin: ', res.code)\n            return checkLogin()\n          } else {\n            return res\n          }\n        })\n    }\n    return this.getUUID()\n      .then(uuid => {\n        debug('getUUID: ', uuid)\n        this.emit('uuid', uuid)\n        this.state = this.CONF.STATE.uuid\n        return checkLogin()\n      })\n      .then(res => {\n        debug('checkLogin: ', res.redirect_uri)\n        return this.login()\n      })\n  }\n\n  start () {\n    debug('启动中...')\n    return this._login()\n      .then(() => this._init())\n      .catch(err => {\n        debug(err)\n        this.emit('error', err)\n        this.stop()\n      })\n  }\n\n  restart () {\n    debug('重启中...')\n    return this._init()\n      .catch(err => {\n        if (err.response) {\n          throw err\n        } else {\n          let err = new Error('重启时网络错误，60s后进行最后一次重启')\n          debug(err)\n          this.emit('error', err)\n          return new Promise(resolve => {\n            setTimeout(resolve, 60 * 1000)\n          }).then(() => this.init())\n            .then(data => {\n              this.updateContacts(data.ContactList)\n            })\n        }\n      }).catch(err => {\n        debug(err)\n        this.emit('error', err)\n        this.stop()\n      })\n  }\n\n  stop () {\n    debug('登出中...')\n    clearTimeout(this.retryPollingId)\n    clearTimeout(this.checkPollingId)\n    this.logout()\n    this.state = this.CONF.STATE.logout\n    this.emit('logout')\n  }\n\n  checkPolling () {\n    if (this.state !== this.CONF.STATE.login) {\n      return\n    }\n    let interval = Date.now() - this.lastSyncTime\n    if (interval > 1 * 60 * 1000) {\n      let err = new Error(`状态同步超过${interval / 1000}s未响应，5s后尝试重启`)\n      debug(err)\n      this.emit('error', err)\n      clearTimeout(this.checkPollingId)\n      setTimeout(() => this.restart(), 5 * 1000)\n    } else {\n      debug('心跳')\n      this.notifyMobile()\n      .catch(err => {\n        debug(err)\n        this.emit('error', err)\n      })\n      this.sendMsg(this._getPollingMessage(), this._getPollingTarget())\n      .catch(err => {\n        debug(err)\n        this.emit('error', err)\n      })\n      clearTimeout(this.checkPollingId)\n      this.checkPollingId = setTimeout(() => this.checkPolling(), this._getPollingInterval())\n    }\n  }\n\n  handleSync (data) {\n    if (!data) {\n      this.restart()\n      return\n    }\n    if (data.AddMsgCount) {\n      debug('syncPolling messages count: ', data.AddMsgCount)\n      this.handleMsg(data.AddMsgList)\n    }\n    if (data.ModContactCount) {\n      debug('syncPolling ModContactList count: ', data.ModContactCount)\n      this.updateContacts(data.ModContactList)\n    }\n  }\n\n  handleMsg (data) {\n    data.forEach(msg => {\n      Promise.resolve().then(() => {\n        if (!this.contacts[msg.FromUserName] ||\n          (msg.FromUserName.startsWith('@@') && this.contacts[msg.FromUserName].MemberCount == 0)) {\n          return this.batchGetContact([{\n            UserName: msg.FromUserName\n          }]).then(contacts => {\n            this.updateContacts(contacts)\n          }).catch(err => {\n            debug(err)\n            this.emit('error', err)\n          })\n        }\n      }).then(() => {\n        msg = this.Message.extend(msg)\n        this.emit('message', msg)\n        if (msg.MsgType === this.CONF.MSGTYPE_STATUSNOTIFY) {\n          let userList = msg.StatusNotifyUserName.split(',').filter(UserName => !this.contacts[UserName])\n          .map(UserName => {\n            return {\n              UserName: UserName\n            }\n          })\n          Promise.all(_.chunk(userList, 50).map(list => {\n            return this.batchGetContact(list).then(res => {\n              debug('batchGetContact data length: ', res.length)\n              this.updateContacts(res)\n            })\n          })).catch(err => {\n            debug(err)\n            this.emit('error', err)\n          })\n        }\n        if (msg.ToUserName === 'filehelper' && msg.Content === '退出wechat4u' ||\n          /^(.\\udf1a\\u0020\\ud83c.){3}$/.test(msg.Content)) {\n          this.stop()\n        }\n      }).catch(err => {\n        this.emit('error', err)\n        debug(err)\n      })\n    })\n  }\n\n  updateContacts (contacts) {\n    if (!contacts || contacts.length == 0) {\n      return\n    }\n    contacts.forEach(contact => {\n      if (this.contacts[contact.UserName]) {\n        let oldContact = this.contacts[contact.UserName]\n        // 清除无效的字段\n        for (let i in contact) {\n          contact[i] || delete contact[i]\n        }\n        Object.assign(oldContact, contact)\n        this.Contact.extend(oldContact)\n      } else {\n        this.contacts[contact.UserName] = this.Contact.extend(contact)\n      }\n    })\n    this.emit('contacts-updated', contacts)\n  }\n\n  _getPollingMessage () { // Default polling message\n    return '心跳：' + new Date().toLocaleString()\n  }\n\n  _getPollingInterval () { // Default polling interval\n    return 5 * 60 * 1000\n  }\n\n  _getPollingTarget () { // Default polling target user\n    return 'filehelper'\n  }\n\n  setPollingMessageGetter (func) {\n    if (typeof (func) !== 'function') return\n    if (typeof (func()) !== 'string') return\n    this._getPollingMessage = func\n  }\n\n  setPollingIntervalGetter (func) {\n    if (typeof (func) !== 'function') return\n    if (typeof (func()) !== 'number') return\n    this._getPollingInterval = func\n  }\n\n  setPollingTargetGetter (func) {\n    if (typeof (func) !== 'function') return\n    if (typeof (func()) !== 'string') return\n    this._getPollingTarget = func\n  }\n\n}\n\nWechat.STATE = getCONF().STATE\n\nexports = module.exports = Wechat\n"]}